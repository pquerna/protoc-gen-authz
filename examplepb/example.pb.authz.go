// Code generated by protoc-gen-authz v0.1.0. DO NOT EDIT.
// source: example.proto

package examplepb

import "github.com/pquerna/protoc-gen-authz/authz"

func (p *IntrospectRequest) AuthzRequiresPermission() authz.PermissionId {
	return AuthIntrospectPermission.ID
}

var (
	AuthIntrospectPermission = authz.RegisterPermission("permission/authz.examplepb.Auth.Introspect")

	AuthEditorRole     = "role/authz.examplepb.Auth:editor"
	AuthOwnerRole      = "role/authz.examplepb.Auth:owner"
	AuthReflectionRole = "role/authz.examplepb.Auth:reflection"
	AuthViewerRole     = "role/authz.examplepb.Auth:viewer"
)

func (p *CreateRequest) AuthzRequiresPermission() authz.PermissionId {
	return UsersCreatePermission.ID
}

func (p *DeleteRequest) AuthzRequiresPermission() authz.PermissionId {
	return UsersDeletePermission.ID
}

func (p *ListRequest) AuthzRequiresPermission() authz.PermissionId {
	return UsersListPermission.ID
}

func (p *PasswordResetRequest) AuthzRequiresPermission() authz.PermissionId {
	return UsersPasswordResetPermission.ID
}

var (
	UsersCreatePermission        = authz.RegisterPermission("permission/authz.examplepb.Users.Create")
	UsersDeletePermission        = authz.RegisterPermission("permission/authz.examplepb.Users.Delete")
	UsersListPermission          = authz.RegisterPermission("permission/authz.examplepb.Users.List")
	UsersPasswordResetPermission = authz.RegisterPermission("permission/authz.examplepb.Users.PasswordReset")

	UsersEditorRole        = "role/authz.examplepb.Users:editor"
	UsersOwnerRole         = "role/authz.examplepb.Users:owner"
	UsersPasswordResetRole = "role/authz.examplepb.Users:password_reset"
	UsersReflectionRole    = "role/authz.examplepb.Users:reflection"
	UsersViewerRole        = "role/authz.examplepb.Users:viewer"
)
var (
	PasswordsActualPasswordViewerPermission = authz.RegisterPermission("permission/authz.examplepb.PasswordsActual.password_viewer")
)

func init() {
	authz.RegisterRole(AuthEditorRole, []authz.PermissionId{AuthIntrospectPermission.ID})
	authz.RegisterRole(AuthOwnerRole, []authz.PermissionId{AuthIntrospectPermission.ID})
	authz.RegisterRole(AuthReflectionRole, []authz.PermissionId{AuthIntrospectPermission.ID})
	authz.RegisterRole(AuthViewerRole, []authz.PermissionId{AuthIntrospectPermission.ID})
	authz.RegisterRole(UsersEditorRole, []authz.PermissionId{UsersCreatePermission.ID, UsersListPermission.ID})
	authz.RegisterRole(UsersOwnerRole, []authz.PermissionId{UsersCreatePermission.ID, UsersDeletePermission.ID, UsersListPermission.ID, UsersPasswordResetPermission.ID})
	authz.RegisterRole(UsersPasswordResetRole, []authz.PermissionId{UsersPasswordResetPermission.ID})
	authz.RegisterRole(UsersViewerRole, []authz.PermissionId{UsersListPermission.ID})
}
